openapi: 3.0.0
info:
  title: Book API
  description: This is a sample OpenAPI specification for a simple API.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local server
paths:
  /books:
    get:
      summary: Get all books
      operationId: getBooks
      tags:
        - books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Books'
  /books/new:
    post:
      summary: Create a new book
      operationId: createBook
      tags:
        - books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{bookId}:
    get:
      summary: Get a book by ID
      operationId: getBookById
      tags:
        - books
      parameters:
        - name: bookId
          in: path
          required: true
          description: The ID of the book to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A single book object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      summary: Update a book by ID
      operationId: updateBookById
      tags:
        - books
      parameters:
        - name: bookId
          in: path
          required: true
          description: The ID of the book to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    delete:
      summary: Delete a book by ID
      operationId: deleteBookById
      tags:
        - books
      parameters:
        - name: bookId
          in: path
          required: true
          description: The ID of the book to delete
          schema:
            type: string
      responses:
        '204':
          description: Book deleted successfully
        '404':
          description: Book not found
components:
  schemas:
    Books:
      type: array
      items:
        $ref: '#/components/schemas/Book'
    Book:
      type: object
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: "The Great Gatsby"
        subscriptions:
          type: string
          example: "A novel written by American author F. Scott Fitzgerald."
